{"version":3,"sources":["components/Input.js","components/api.js","components/InputForm.js","components/ContactDisplay.js","components/Notification.js","App.js","index.js"],"names":["Input","name","value","onChange","baseUrl","InputForm","persons","setPersons","deletePerson","setMessage","useState","newName","setName","newNumber","setNumber","onSubmit","event","preventDefault","isUnique","arr","newValue","attr","findIndex","elem","toLowerCase","contactObject","axios","post","then","res","console","log","concat","data","catch","postContact","number","person","find","newContactObject","id","put","response","alterContact","map","personMapElem","target","type","ContactDisplay","contacts","length","contact","i","onClick","onDeletion","delete","result","deleteContact","Notification","message","className","App","useEffect","get","err","getContacts","text","filterText","setFilterText","setMessageText","messageType","setType","newContactList","filter","Number","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41f553ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Input = ({name, value, onChange}) => {\r\n  return(\r\n    <div>\r\n      {name}: <input value={value} onChange={onChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/contacts'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getContacts = (setPersons) => {\r\n  axios\r\n    .get(baseUrl)\r\n    .then(response => {\r\n      setPersons(response.data)\r\n      \r\n      console.log(`${baseUrl}`, response)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      console.log(`${baseUrl}`)\r\n    })\r\n}\r\n\r\nconst postContact = (contactObject, setMessage, setPersons, persons) => {\r\n  axios\r\n    .post(baseUrl, contactObject)\r\n    .then(res => {\r\n      console.log(res)\r\n      setMessage(`${contactObject.name} successfully added!`, `success`)\r\n      setPersons(persons.concat(res.data))\r\n    })\r\n    .catch(res => {\r\n      console.log(\"POST request failed.\\n\", res)\r\n      setMessage(`${contactObject.name} could not be added.`, `error`)\r\n    })\r\n}\r\n\r\nconst alterContact = (id, contactObject, deletePerson, setMessage) => {\r\n  axios\r\n    .put(`${baseUrl}/${id}`, contactObject)\r\n    .then(response => {\r\n      console.log(response)\r\n      setMessage(`${contactObject.name} successfully altered!`, `success`)\r\n    })\r\n    .catch (response => {\r\n      console.log(\"POST request failed.\\n\", response)\r\n      deletePerson(id)\r\n      setMessage(`ERROR, contact no longer exists.`, `error`)\r\n    })\r\n}\r\n\r\nconst deleteContact = (id, name, onDeletion, setMessage) => {\r\n  axios\r\n    .delete(`${baseUrl}/${id}`)\r\n    .then(res => {\r\n      setMessage(`${name} was deleted.`, 'success')\r\n    })\r\n    .catch(result => {\r\n      setMessage(`ERROR: Could not delete contact ${name}.`, `error`)\r\n    })\r\n\r\n    onDeletion(id)\r\n}\r\n\r\nexport {getContacts, postContact, alterContact, deleteContact}","import React, { useState } from 'react'\r\nimport Input from './Input'\r\nimport axios from 'axios'\r\nimport {getContacts, postContact, alterContact, deleteContact} from './api'\r\n\r\n\r\nconst InputForm = ({persons, setPersons, deletePerson, setMessage}) => {\r\n\r\n  const [ newName, setName ] = useState('')\r\n  const [ newNumber, setNumber ]  = useState('')\r\n\r\n  const handleNameChange = (event) => setName(event.target.value)\r\n  const handleNumChange  = (event) => setNumber(event.target.value)\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n\r\n    const isUnique = (arr, newValue, attr) => arr.findIndex(elem => elem[attr].toLowerCase() === newValue.toLowerCase()) === -1  ? true : false\r\n\r\n    if(!isUnique(persons, newName, 'name')){\r\n      let person = persons.find(person => person.name === newName)\r\n      if(newNumber !== person.number){\r\n        let newContactObject = {...person, number: newNumber}\r\n        alterContact(person.id, newContactObject, deletePerson, setMessage)\r\n        setPersons(persons.map(personMapElem => personMapElem.name === person.name ? newContactObject : personMapElem))\r\n      }\r\n      return\r\n    }\r\n    else if(!isUnique(persons, newNumber, 'number')) {\r\n      setMessage(`The number ${newNumber} is already in the phonebook.`, 'error')\r\n      return\r\n    }\r\n\r\n    const newPerson = { name: newName, number: newNumber }\r\n\r\n    postContact(newPerson, setMessage, setPersons, persons)\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addContact}>\r\n        <div>\r\n          <Input name='Name' value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          <Input name='Phone Number' value={newNumber} onChange={handleNumChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputForm","import React, { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {getContacts, postContact, alterContact, deleteContact} from './api'\r\n\r\n\r\nconst ContactDisplay = ({contacts, deletePerson, setMessage}) => {\r\n  if (contacts.length === 0) {\r\n    return(\r\n      <p>...</p>\r\n    )\r\n  } else {\r\n    return(\r\n      contacts.map((contact, i) => <div key={i}>{contact.name} {contact.number}<button type='button' onClick={() => deleteContact(contact.id, contact.name, deletePerson, setMessage)}>delete</button></div> )\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactDisplay","import React from 'react'\r\nimport './notification.css'\r\n\r\nconst Notification = ({message, type}) => {\r\n  if(message === null)\r\n   return null\r\n\r\n  return (\r\n    <div className={type}>\r\n      <span>{message}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport InputForm from './components/InputForm'\nimport Input from './components/Input'\nimport ContactDisplay from './components/ContactDisplay'\nimport Notification from './components/Notification'\nimport {getContacts, postContact, alterContact, deleteContact} from './components/api'\n\n\n\nconst App = () => {\n\n  const dbPath = `http://localhost:3001`\n  const baseURL = '/api/contacts'\n\n  useEffect(() => {\n    getContacts(setPersons)\n  }, [])\n\n  const [ persons, setPersons ] = useState([]) \n  const [ filterText, setFilterText ] = useState('')\n  const [ message, setMessageText ] = useState(null)\n  const [ messageType, setType ] = useState(null)\n\n  const setMessage = (message, type) => {\n    setMessageText(message)\n    setType(type)\n  }\n  const handleFilterChange = (event) => setFilterText(event.target.value)\n\n  const onFilterChange = (text) => {\n    text = text.toLowerCase\n    if(filterText !== ''){\n      return(persons.filter(person => \n        (person.name.toLowerCase().includes(text) || person.number.toLowerCase().includes(text)))\n      )\n    } else return(persons)\n  }\n\n  const deletePerson = (id) => {\n    let newContactList = persons.filter(person => Number(person.id) !== Number(id))\n    setPersons(newContactList)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType}/>\n      <Input name='Filter Phonebook' value={filterText} onChange={handleFilterChange} />\n      <h3>Add New Contact</h3>\n      <InputForm persons={persons} setPersons={setPersons} deletePerson={deletePerson} setMessage={setMessage} />\n      <h3>Numbers</h3>\n      <ContactDisplay deletePerson={deletePerson} contacts={onFilterChange(filterText)} setMessage={setMessage} />\n    </div>\n  )\n}\n\nexport default App;\n","\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}